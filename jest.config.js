module.exports = {
  collectCoverageFrom: [
    'app/**/*.{js,jsx}',
    '!app/**/tests/*.{js,jsx}',
    '!app/*/RbGenerated*/*.{js,jsx}',
    '!app/index.jsx',
    '!app/global-styles.js',
    '!app/*/*/Loadable.{js,jsx}',
  ],
  coverageThreshold: {
    global: {
      statements: 100,
      branches: 100,
      functions: 100,
      lines: 100,
    },
  },
  moduleDirectories: ['app', 'node_modules'],
  moduleNameMapper: {
    '.*\\.(css|less|styl|scss|sass)$': '<rootDir>/internals/mocks/cssModule.js',
    '.*\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$':
      '<rootDir>/internals/mocks/image.js',
  },
  setupFilesAfterEnv: [
    '@testing-library/jest-dom/extend-expect',
    'expect-more-jest',
    'jest-extended',
    'jest-styled-components',
    'jest-enzyme',
    'jest-canvas-mock',
    'jest-date-mock',
    'jest-fetch-mock/setupJest',
    'jest-localstorage-mock',
    '<rootDir>/internals/testing/setup.js',
  ],
  setupFiles: ['@babel/polyfill', 'raf/polyfill'],
  snapshotSerializers: ['enzyme-to-json/serializer'],
  testEnvironment: 'enzyme',
  testMatch: ['<rootDir>/app/**/tests/*.test.{js,jsx}'],
  transform: { '\\.(js|jsx)$': 'babel-jest' },
  restoreMocks: true,
  watchPlugins: [
    'jest-watch-suspend',
    ['jest-watch-toggle-config', { setting: 'bail' }],
    ['jest-watch-toggle-config', { setting: 'collectCoverage' }],
    ['jest-watch-toggle-config', { setting: 'notify' }],
    ['jest-watch-toggle-config', { setting: 'verbose' }],
    'jest-watch-typeahead/filename',
    'jest-watch-typeahead/testname',
  ],
  watchPathIgnorePatterns: [
    '<rootDir>/coverage',
    '<rootDir>/docs',
    '<rootDir>/fastlane',
    '<rootDir>/infrasturcture',
    '<rootDir>/internals',
    '<rootDir>/node_modules',
    '<rootDir>/server',
    '<rootDir>/www',
  ],
  collectCoverage: true,
  coverageDirectory: '<rootDir>/coverage',
  coverageReporters: ['lcov'],
  errorOnDeprecated: true,
};
